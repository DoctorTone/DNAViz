var AWF=.3,BWF=.3,GWF=.3,CWF=.3;var Aco="midnightblue",Bco="darkred",Cco=Aco,Gcos=["mediumvioletred","darkorange","pink","silver"],Ncw="gray",Ncs="khaki",Nso=.5,Pcc="steelblue",Pcs="skyblue",Pco=.5,Pso=.5;var BGCOLORS=["lightgray","white","black","powderblue"];var lowsaturation=[15122110,12510910,12500710,15132330,12510950];var higsaturation=[16740464,10551200,10526975,16777072,7405567];var logos=[29197,16763648,2798592,16749056,7405567];var rgbyc=logos;var DEBUG=false;let basePairReps=["Wire","Element","Surface","Cylinder","Smooth","Spacefill","Slab"];let appearanceConfig={Back:"#000000",BBone:"#8b0000",A:DNA_HEX_COLOURS.MOLECULE_A,G:DNA_HEX_COLOURS.MOLECULE_G,T:DNA_HEX_COLOURS.MOLECULE_T,C:DNA_HEX_COLOURS.MOLECULE_C,Pairs:basePairReps,Protein:["Cartoon","Wire","Surface","Ribbon","Rope","Tube"]};let saveConfig={Back:"#000000"};var dna_axis,orientation,zoom;var reference_orientation_component=null;let NDBColors;const DEFAULT_X_ROT=-Math.PI/4;const DEFAULT_Y_ROT=0;const DEFAULT_Z_ROT=Math.PI/2;class DNAViz{constructor(){let moleculeColours=[DNA_COLOURS.MOLECULE_A,DNA_COLOURS.MOLECULE_G,DNA_COLOURS.MOLECULE_T,DNA_COLOURS.MOLECULE_C,DNA_COLOURS.MOLECULE_U];let moleculeHexColours=[DNA_HEX_COLOURS.MOLECULE_A,DNA_HEX_COLOURS.MOLECULE_G,DNA_HEX_COLOURS.MOLECULE_T,DNA_HEX_COLOURS.MOLECULE_C];this.basePairReps=basePairReps;this.basePairRepColours=[];for(let i=0,numPairs=this.basePairReps.length;i<numPairs;++i){this.basePairRepColours.push(moleculeHexColours.slice(0))}this.currentRep=0;this.moleculeColours=moleculeColours;this.baseName="DNAVizConfig";this.messageTimer=3*1e3}init(){this.createColourScheme();let prefs=localStorage.getItem(this.baseName+"Saved");if(prefs){let value;for(let prop in appearanceConfig){value=localStorage.getItem(this.baseName+prop);if(value){this.setGUI(prop,value)}}}}createColourScheme(){NDBColors=NGL.ColormakerRegistry.addSelectionScheme([[this.moleculeColours[0],"DA or A"],[this.moleculeColours[3],"DG or G"],[this.moleculeColours[2],"DT"],[this.moleculeColours[1],"DC or C"],[this.moleculeColours[4],"U"],["gray","*"]],"DNA_Protein")}getRepresentationColours(index){return this.basePairRepColours[index]}changeColourScheme(molecule,colour){this.moleculeColours[molecule]=colour;this.createColourScheme()}changeBasePairColour(molecule,colour){let base=this.basePairRepColours[this.currentRep];base[molecule]=colour;console.log("Rep = ",this.currentRep);console.log("Colour = ",colour)}createScene(AXIS_PATH,BACKBONE_PATH,CRPATH,PROTEIN_PATH,PPATH,IPATH,SPATH){this.stage=new NGL.Stage("viewport",{cameraType:"perspective",backgroundColor:appearanceConfig.Back});let pdbRG=this.stage.loadFile(PROTEIN_PATH).then(function(c){let some=do_input(c);return some},error);let axRG,bbRG,crRG;if(AXIS_PATH!=""){axRG=this.stage.loadFile(AXIS_PATH).then(function(c){reference_orientation_component=c;return c}).then(do_ax,error)}else{pdbRG.then(function(rg){reference_orientation_component=rg["Nucleic Acid"].component;return rg})}if(BACKBONE_PATH!=""){bbRG=this.stage.loadFile(BACKBONE_PATH).then(do_bb,error)}Promise.all([pdbRG,axRG,bbRG,crRG]).then(RG=>{this.repData={};reference_orientation_component.autoView();RG.forEach(rep=>{$.extend(this.repData,rep)})}).then(()=>{let RGdata=this.repData;if(RGdata["Nucleic Acid"])RGdata["Nucleic Acid"].GUI("nadisplay",true);if(RGdata["Axis"])RGdata["Axis"].GUI("axdisplay",true);if(RGdata["Backbone"])RGdata["Backbone"].GUI("bbdisplay",true);if(RGdata["MinorGroove"])RGdata["MinorGroove"].GUI("gr1display",false);if(RGdata["MajorGroove"])RGdata["MajorGroove"].GUI("gr2display",false);if(RGdata["Curvature"])RGdata["Curvature"].GUI("crdisplay",true);if(RGdata["Protein"])RGdata["Protein"].GUI("prodisplay",true);this.stage.setRotation(DEFAULT_X_ROT,DEFAULT_Y_ROT,DEFAULT_Z_ROT)});window.addEventListener("resize",event=>{this.stage.handleResize()},false)}rotateModel(direction){this.stage.rotateModel(direction)}zoomIn(zoom){this.stage.zoomInModel(zoom)}zoomOut(zoom){this.stage.zoomOutModel(zoom)}createGUI(){window.addEventListener("load",()=>{let visibilityConfig={NAcid:true,BBone:true,Axis:true,Protein:true};let _this=this;let guiWidth=$("#guiWidth").css("width");guiWidth=parseInt(guiWidth,10);console.log("Gui width = ",guiWidth);if(!guiWidth){guiWidth=10}guiWidth/=100;let controlKit=new ControlKit;controlKit.addPanel({label:"Configuration",width:window.innerWidth*guiWidth,enable:true}).addSubGroup({label:"Appearance",enable:false}).addColor(appearanceConfig,"Back",{colorMode:"hex",onChange:()=>{this.onBackgroundColourChanged(appearanceConfig.Back)}}).addColor(appearanceConfig,"BBone",{colorMode:"hex",onChange:()=>{this.onBackboneColourChanged(appearanceConfig.BBone)}}).addColor(appearanceConfig,"A",{colorMode:"hex",onChange:()=>{this.onMoleculeColourChanged(MOLECULES.A,appearanceConfig.A)}}).addColor(appearanceConfig,"G",{colorMode:"hex",onChange:()=>{this.onMoleculeColourChanged(MOLECULES.G,appearanceConfig.G)}}).addColor(appearanceConfig,"T",{colorMode:"hex",onChange:()=>{this.onMoleculeColourChanged(MOLECULES.T,appearanceConfig.T)}}).addColor(appearanceConfig,"C",{colorMode:"hex",onChange:()=>{this.onMoleculeColourChanged(MOLECULES.C,appearanceConfig.C)}}).addSelect(appearanceConfig,"Pairs",{selected:0,onChange:index=>{this.onChangeBasePairRepresentation(index);let colours=_this.getRepresentationColours(index);appearanceConfig.A=colours[0];appearanceConfig.G=colours[1];appearanceConfig.T=colours[2];appearanceConfig.C=colours[3];this.applyValue()}}).addSelect(appearanceConfig,"Protein",{selected:0,onChange:index=>{this.onChangeProteinRepresentation(index)}}).addSubGroup({label:"Visibility",enable:false}).addCheckbox(visibilityConfig,"NAcid",{onChange:()=>{this.toggleAcid()}}).addCheckbox(visibilityConfig,"BBone",{onChange:()=>{this.toggleBackbone()}}).addCheckbox(visibilityConfig,"Axis",{onChange:()=>{this.toggleAxis()}}).addCheckbox(visibilityConfig,"Protein",{onChange:()=>{this.toggleProtein()}}).addSubGroup({label:"Preferences"}).addButton("Save",()=>{for(let prop in saveConfig){if(prop in appearanceConfig){saveConfig[prop]=appearanceConfig[prop]}}this.savePreferences(saveConfig)})})}onBackgroundColourChanged(colour){this.stage.setParameters({backgroundColor:colour})}onBackboneColourChanged(colour){this.repData["Backbone"].setParameters({colorScheme:"uniform",colorValue:colour,radius:.3})}onMoleculeColourChanged(molecule,colour){this.changeColourScheme(molecule,colour);this.repData["Nucleic Acid"].setComponentParameters(this.currentRep,{colorScheme:NDBColors});this.changeBasePairColour(molecule,colour)}onChangeBasePairRepresentation(representation){this.repData["Nucleic Acid"].enable(representation);this.currentRep=representation}onChangeProteinRepresentation(representation){this.repData["Protein"].enable(representation)}toggleAcid(){this.repData["Nucleic Acid"].toggle()}toggleBackbone(){this.repData["Backbone"].toggle()}toggleAxis(){this.repData["Axis"].toggle()}toggleProtein(){this.repData["Protein"].toggle()}setGUI(prop,value){let newValue=parseFloat(value);if(isNaN(newValue)){appearanceConfig[prop]=value;return}appearanceConfig[prop]=newValue}stopNotifications(elemList){for(let i=0,numElems=elemList.length;i<numElems;++i){$("#"+elemList[i]).contextmenu(()=>{return false})}}savePreferences(config){for(let prop in config){localStorage.setItem(this.baseName+prop,config[prop])}localStorage.setItem(this.baseName+"Saved","Saved");this.displayMessage("Preferences saved")}displayMessage(msg){$("#content").html(msg);$("#message").show();setTimeout(()=>{$("#message").hide()},this.messageTimer)}}$(document).ready(function(e){if(!Detector.webgl){$("#notSupported").show();return}$("#mainModal").modal();$("#hideDetails").on("click",()=>{$("#graphs").addClass("d-none");$("#showInfo").removeClass("d-none")});$("#showDetails").on("click",()=>{$("#graphs").removeClass("d-none");$("#showInfo").addClass("d-none")});$("#hideSequence").on("click",()=>{$("#sequenceInfo").addClass("d-none");$("#toggleSequenceInfo").removeClass("d-none")});$("#showSequence").on("click",()=>{$("#sequenceInfo").removeClass("d-none");$("#toggleSequenceInfo").addClass("d-none")});let app=new DNAViz;app.init();app.createScene("data/output_X.pdb","data/output_B.pdb","data/output_R.pdb","data/output.pdb","data/pairings.dat","data/interactions.dat","data/sequence.dat");app.createGUI();$("#rotateLeft").on("mousedown",()=>{app.rotateModel(-1)});$("#rotateLeft").on("mouseup",()=>{app.rotateModel(0)});$("#rotateRight").on("mousedown",()=>{app.rotateModel(1)});$("#rotateRight").on("mouseup",()=>{app.rotateModel(0)});$("#zoomIn").on("mousedown",()=>{app.zoomIn(true)});$("#zoomIn").on("mouseup",()=>{app.zoomIn(false)});$("#zoomOut").on("mousedown",()=>{app.zoomOut(true)});$("#zoomOut").on("mouseup",()=>{app.zoomOut(false)});$("#rotateLeft").on("touchstart",()=>{app.rotateModel(-1)});$("#rotateLeft").on("touchend",()=>{app.rotateModel(0)});$("#rotateRight").on("touchstart",()=>{app.rotateModel(1)});$("#rotateRight").on("touchend",()=>{app.rotateModel(0)});$("#zoomIn").on("touchstart",()=>{app.zoomIn(true)});$("#zoomIn").on("touchend",()=>{app.zoomIn(false)});$("#zoomOut").on("mousedown",()=>{app.zoomOut(true)});$("#zoomOut").on("mouseup",()=>{app.zoomOut(false)});let elemList=["rotateControls","zoomControls"];app.stopNotifications(elemList)});function safariw(data,target){var url=URL.createObjectURL(data);target.location.href=url}function do_input(comp){return{"Nucleic Acid":new MutuallyExclusiveRepresentationGroup(comp,"Nucleic Acid","nucleic").addRepresentation("Wire",comp.addRepresentation("licorice",{colorScheme:NDBColors})).addRepresentation("Element",comp.addRepresentation("ball+stick",{colorScheme:"element"})).addRepresentation("Surface",comp.addRepresentation("surface",{opacity:Nso,colorScheme:"uniform",colorValue:Ncs})).addRepresentation("Cylinder",comp.addRepresentation("base",{colorScheme:NDBColors})).addRepresentation("Smooth",comp.addRepresentation("hyperball",{colorScheme:NDBColors})).addRepresentation("Spacefill",comp.addRepresentation("spacefill",{colorScheme:NDBColors})).addRepresentation("Slab",comp.addRepresentation("slab",{colorScheme:NDBColors})),Protein:new MutuallyExclusiveRepresentationGroup(comp,"Protein","protein").addRepresentation("Cartoon",comp.addRepresentation("cartoon",{colorScheme:"uniform",colorValue:Pcc,opacity:Pco})).addRepresentation("Wire",comp.addRepresentation("licorice",{colorScheme:"element"})).addRepresentation("Surface",comp.addRepresentation("surface",{opacity:Pso,colorScheme:"uniform",colorValue:Pcs})).addRepresentation("Ribbon",comp.addRepresentation("ribbon",{colorScheme:"uniform",colorValue:Pcc})).addRepresentation("Rope",comp.addRepresentation("rope",{colorScheme:"uniform",colorValue:Pcc})).addRepresentation("Tube",comp.addRepresentation("tube",{colorScheme:"uniform",colorValue:Pcc}))}}function do_ax(comp){return{Axis:new MutuallyExclusiveRepresentationGroup(comp,"Axis",null).addRepresentation(null,comp.addRepresentation("licorice",{colorScheme:"uniform",colorValue:Aco,radius:AWF}))}}function do_bb(comp){return{Backbone:new MutuallyExclusiveRepresentationGroup(comp,"Backbone","(:A or :B)").addRepresentation(null,comp.addRepresentation("licorice",{colorScheme:"uniform",colorValue:Bco,radius:BWF})),MinorGroove:new MutuallyExclusiveRepresentationGroup(comp,"MinorGroove",":C").addRepresentation(null,comp.addRepresentation("licorice",{colorScheme:"uniform",colorValue:Gcos[0],radius:GWF})),MajorGroove:new MutuallyExclusiveRepresentationGroup(comp,"MajorGroove",":D").addRepresentation(null,comp.addRepresentation("licorice",{colorScheme:"uniform",colorValue:Gcos[1],radius:GWF}))}}function do_cr(comp){return{Curvature:new MutuallyExclusiveRepresentationGroup(comp,"Curvature",null).addRepresentation(null,comp.addRepresentation("licorice",{colorScheme:"uniform",colorValue:Cco,radius:CWF}))}}function read_file(fname,parser,done){$.get(fname).done(function(data){done(parser(data))})}function parse_pairings(data){var pairings={};var lines=data.split("\n");for(var i=0;i<lines.length-1;i++){var values=lines[i].split("\t");pairings[values[1]]=values[0]}return pairings}function invert_hash(hash){var _hash={};for(var key in hash)if(hash.hasOwnProperty(key))_hash[hash[key]]=key;return _hash}function parse_interactions(data,pairings){var interactions={};var lines=data.split("\n");for(var i=0;i<lines.length-1;i++){var values=lines[i].split("\t");var key=values[0]+":"+values[1];if(key in pairings)key=pairings[key];if(!(key in interactions))interactions[key]=[];interactions[key].push(values)}return interactions}function parse_sequence(data){var sequence=[];var lines=data.split("\n");for(var i=0;i<lines.length-1;i++){var values=lines[i].split("\t");sequence.push(values)}return sequence}function vertical_sequence(sequence,group){var c=$("<ol/>");sequence.forEach(function(basepair,i){c.append($("<li/>").append($("<a/>").click(function(e){group.nenable(basepair[2])}).append(basepair[0]+"--"+basepair[1])))});return c}function _normalize(name){if(name[0]=="D")name=name.slice(1);return name}function horizontal_sequence(sequence,group){var a=$("<div/>");var b=$("<table/>");var c=$("<tr/>");c.append($("<th/>",{class:"seq_initial"}).append("5'-<br/><br/>3'-"));sequence.forEach(function(basepair,i){forb=_normalize(basepair[0]);revb=_normalize(basepair[1]);c.append($("<td/>").click(function(e){var tname=basepair[2];$(this).parent().children().each(function(i,td){$(td).toggleClass("active",false)});if(group.enabled>=0&&group.reprList[group.enabled].name==tname){group.enable(-1)}else{group.nenable(tname);$(this).toggleClass("active")}}).append(forb+"<br/>|<br/>"+revb))});c.append($("<th/>",{class:"seq_final"}).append("-3'<br/><br/>-5'"));b.append(c);a.append(b);return a}function do_interactions(comp,pairings_file,interactions_file,sequence_file){var group=new MutuallyExclusiveRepresentationGroup(comp,"Interactions",null);read_file(pairings_file,parse_pairings,function(pairings){read_file(interactions_file,function(data){return parse_interactions(data,pairings)},function(interactions){var rev_pairings=invert_hash(pairings);for(var res1 in interactions){var allresidues=interactions[res1].map(function(values){return values[4]+":"+values[5]});allresidues.push(res1);if(res1 in rev_pairings)allresidues.push(rev_pairings[res1]);var interactiongroup=new InteractionGroup(comp,res1,"("+allresidues.join(" or ")+")").addRepresentation("Ball&Stick",comp.addRepresentation("ball+stick",{colorScheme:"element",colorValue:"#006b8f"}));interactions[res1].forEach(function(values){interactiongroup.addInteraction(values[0]+":"+values[1]+"."+values[3],values[4]+":"+values[5]+"."+values[7],hydrophobic=values[8]=="H")});group.addRepresentation(res1,interactiongroup)}})});read_file(sequence_file,parse_sequence,function(sequence){var c=horizontal_sequence(sequence,group);$("#sequence").append(c)});group.toggle(true);return{Interactions:group}}function _autoView(component,sele,duration){component.stage.animationControls.zoomMove(component.getCenter(sele),component.getZoom(sele)*.5,duration)}var InteractionGroup=function(component,name,selection,representations,defaultParameters){RepresentationGroup.call(this,component,name,selection,representations,defaultParameters)};InteractionGroup.prototype=Object.create(RepresentationGroup.prototype);InteractionGroup.prototype.setVisibility=function(what){this.reprList.forEach(function(repr){repr.setVisibility(what)});if(what){_autoView(this.component,this.selection,1e3)}};InteractionGroup.prototype.all_empty=function(){};InteractionGroup.prototype.GUI=function(){};InteractionGroup.prototype.addInteraction=function(atom1,atom2,hydrophobic){hydrophobic=typeof hydrophobic==="undefined"?false:hydrophobic;var parameters={atomPair:[[atom1,atom2]],labelColor:"black",color:"blue",opacity:.5,scale:.25,labelUnit:"angstrom",labelSize:.75};if(hydrophobic){parameters["labelSize"]=0;parameters["color"]="green"}this.addRepresentation("distance",this.component.addRepresentation("distance",parameters));return this};function error(err){console.log(err)}function capitalize(string){return string.charAt(0).toUpperCase()+string.slice(1)}function get_axis(structure){var atoms=structure.atomStore,n=atoms.count-1,x=atoms.x[0]-atoms.x[n],y=atoms.y[0]-atoms.y[n],z=atoms.z[0]-atoms.z[n];return new NGL.Vector3(x,y,z).normalize()}